// <auto-generated />
using System;
using ManbaaELWaddi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManbaaELWaddi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ElWadManbaaELWaddidi.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"), 1L, 1);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddedById")
                        .HasColumnType("int");

                    b.Property<int?>("AllScrap")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InventoryQuantityEmpty")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryQuantityEmptyWithClients")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryQuantityEmptyWithUsers")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryQuantityFull")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"), 1L, 1);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.CalcQuot", b =>
                {
                    b.Property<int>("CalcQuotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalcQuotId"), 1L, 1);

                    b.Property<int?>("ClientQuantityOut")
                        .HasColumnType("int");

                    b.Property<int?>("FkClientId")
                        .HasColumnType("int");

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("QuantityOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserQuantityOutForClients")
                        .HasColumnType("int");

                    b.HasKey("CalcQuotId");

                    b.HasIndex("FkUserId");

                    b.ToTable("CalcQuots");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FkUserId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("FkUserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"), 1L, 1);

                    b.Property<int?>("FkUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceQuantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("FkUserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("FkClientId")
                        .HasColumnType("int");

                    b.Property<int>("FkUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("FkClientId");

                    b.HasIndex("FkUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("CarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserQuantityEmpty")
                        .HasColumnType("int");

                    b.Property<int?>("UserQuantityEmptyWithClients")
                        .HasColumnType("int");

                    b.Property<int?>("UserQuantityFull")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.CalcQuot", b =>
                {
                    b.HasOne("ManbaaELWaddi.Models.User", "FkUser")
                        .WithMany("CalcQuots")
                        .HasForeignKey("FkUserId");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Client", b =>
                {
                    b.HasOne("ManbaaELWaddi.Models.User", "FkUser")
                        .WithMany("Clients")
                        .HasForeignKey("FkUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Invoice", b =>
                {
                    b.HasOne("ManbaaELWaddi.Models.User", "FkUser")
                        .WithMany("Invoices")
                        .HasForeignKey("FkUserId");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.Order", b =>
                {
                    b.HasOne("ManbaaELWaddi.Models.Client", "FkClient")
                        .WithMany()
                        .HasForeignKey("FkClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManbaaELWaddi.Models.User", "FkUser")
                        .WithMany("Orders")
                        .HasForeignKey("FkUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FkClient");

                    b.Navigation("FkUser");
                });

            modelBuilder.Entity("ManbaaELWaddi.Models.User", b =>
                {
                    b.Navigation("CalcQuots");

                    b.Navigation("Clients");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
